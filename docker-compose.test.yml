version: '3'

services:
  db-test:
    image: postgres:15
    volumes:
      - postgres_data_test:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-deconfianza_test}
    ports:
      - "${DB_PORT:-5434}:5432"
    networks:
      - deconfianza_test_network

  backend-test:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    volumes:
      - ./backend:/app
    ports:
      - "${BACKEND_PORT:-8002}:8000"
    depends_on:
      - db-test
    environment:
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - POSTGRES_DB=${POSTGRES_DB:-deconfianza_test}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_HOST=${POSTGRES_HOST:-db-test}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - DJANGO_SETTINGS_MODULE=deconfianza.settings.test
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    networks:
      - deconfianza_test_network

  frontend-test:
    build:
      context: ./frontend
      dockerfile: Dockerfile.test
      args:
        - API_URL=${API_URL}
        - LANDING_ONLY_MODE=${LANDING_ONLY_MODE:-true}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "${FRONTEND_PORT}:5173"
    depends_on:
      - backend-test
    environment:
      - VITE_API_URL=${API_URL}
      - VITE_LANDING_ONLY_MODE=${LANDING_ONLY_MODE:-true}
    command: npm run dev -- --host 0.0.0.0
    networks:
      - deconfianza_test_network

networks:
  deconfianza_test_network:
    driver: bridge

volumes:
  postgres_data_test: