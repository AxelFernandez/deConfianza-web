version: '3'

services:
  db-prod:
    image: postgres:15
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-deconfianza_prod}
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - deconfianza_prod_network
    restart: always

  backend-prod:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    volumes:
      - ./backend:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      - db-prod
    environment:
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - POSTGRES_DB=${POSTGRES_DB:-deconfianza_prod}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_HOST=${POSTGRES_HOST:-db-prod}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - DJANGO_SETTINGS_MODULE=deconfianza.settings.prod
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --no-input &&
             gunicorn deconfianza.wsgi:application --bind 0.0.0.0:8000"
    networks:
      - deconfianza_prod_network
    restart: always

  frontend-prod:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - API_URL=${API_URL}
        - LANDING_ONLY_MODE=${LANDING_ONLY_MODE:-true}
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend-prod
    networks:
      - deconfianza_prod_network
    restart: always

networks:
  deconfianza_prod_network:
    driver: bridge

volumes:
  postgres_data_prod:
  static_volume:
  media_volume: